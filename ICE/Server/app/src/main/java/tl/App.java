/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tl;

import com.zeroc.Ice.*;
import com.zeroc.Ice.Object;

import java.util.Arrays;

public class App {

    protected final static String FOLDER = "/root/app/Application-Architectures-distribuees/ICE/Server/app/src/main/resources/";
    public static final String ADDRESS = "167.172.187.86";

    public static void main(String[] args) {

        int status = 0;
        java.util.List<String> extraArgs = new java.util.ArrayList<String>();

        //
        // Try with resources block - communicator is automatically destroyed
        // at the end of this try block
        //
        try(com.zeroc.Ice.Communicator communicator = com.zeroc.Ice.Util.initialize(args, extraArgs))
        {
            communicator.getProperties().setProperty("Ice.Default.Package", "tl");
            //
            // Install shutdown hook to (also) destroy communicator during JVM shutdown.
            // This ensures the communicator gets destroyed when the user interrupts the application with Ctrl-C.
            //
            Runtime.getRuntime().addShutdownHook(new Thread(() -> communicator.destroy()));

            if(!extraArgs.isEmpty())
            {
                System.err.println("too many arguments");
                status = 1;
            }
            else
            {
                ObjectAdapter adapter = communicator.createObjectAdapter("PlayerAdapter");
                Properties properties = communicator.getProperties();
                Identity id = Util.stringToIdentity(properties.getProperty("Identity"));
                StreamHttp streamHttp;
                if (properties.getProperty("Ice.Admin.ServerId").equals("Serv1")) {
                    System.out.println("Serv1");
                    streamHttp = new StreamHttp(ADDRESS, 1245);
                } else {
                    System.out.println("Serv2");
                    streamHttp = new StreamHttp(ADDRESS, 1246);
                }

                Thread t1 = new Thread(streamHttp);
                t1.start();

                adapter.add(new Player(streamHttp), id);
                adapter.activate();

                communicator.waitForShutdown();
            }
        }

        System.exit(status);
    }
}


